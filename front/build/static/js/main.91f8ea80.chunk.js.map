{"version":3,"sources":["todo.js","todoList.js","utils.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["TodoForm","saveTodo","useState","value","setValue","onSubmit","event","preventDefault","TextField","variant","placeholder","margin","onChange","target","TodoList","todos","deleteTodo","List","map","todo","index","ListItem","key","toString","dense","button","Checkbox","tabIndex","disableRipple","ListItemText","primary","ListItemSecondaryAction","IconButton","aria-label","onClick","uploadData","params","a","axios","post","response","data","g_selected_date","g_increases","customStyles","content","top","left","right","bottom","marginRight","transform","width","height","override","css","ColorButton","withStyles","theme","root","color","palette","getContrastText","purple","backgroundColor","Button","useStyles","makeStyles","spacing","Modal","setAppElement","App","classes","clickCount","setclickCount","isModal","setisModal","isTodo","setTodo","loading","setLoading","selected_date","setSelectedDate","increases","setIncrease","setData","url","setUrl","symbols","setSymbols","multiSymbols","setMultiSymbols","Header","accessor","Cell","row","symbol","filterMethod","filter","id","startsWith","Filter","type","time_o_1","utils","DateFnsUtils","DateTimePicker","onChangeDate","time_o_2","increase1","getProps","state","rowInfo","column","style","onChangeIncrease","columns","setColumns","e","temp","Object","assign","useEffect","date_num","date_pick_name","header_name","increase_name","push","chunkArray","myArray","chunk_size","arrayLength","length","tempArray","myChunk","slice","captureData","multiline_items","split","group","promises","endpoint","Promise","all","results","console","log","error","loadData","increments","dates","fetchData","then","success","catch","closeModal","submitSymbols","uploadSymbol","className","isOpen","onRequestClose","todoText","trimmedText","trim","label","multiline","size","src","logo","alt","startIcon","onKeyDown","filterable","defaultFilterMethod","String","updateMyData","rowIndex","columnId","old","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.91f8ea80.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst TodoForm = ({ saveTodo }) => {\r\n  const [value, setValue] = useState('');\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(event) => {\r\n        event.preventDefault();\r\n        saveTodo(value);\r\n        setValue('');\r\n      }}\r\n    >\r\n      <TextField\r\n        variant=\"outlined\"\r\n        placeholder=\"Add todo\"\r\n        margin=\"normal\"\r\n        onChange={(event) => {\r\n          setValue(event.target.value);\r\n        }}\r\n        value={value}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoForm;","import React from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst TodoList = ({ todos, deleteTodo }) => (\r\n  <List>\r\n    {todos.map((todo, index) => (\r\n      <ListItem key={index.toString()} dense button>\r\n        <Checkbox tabIndex={-1} disableRipple />\r\n        <ListItemText primary={todo} />\r\n        <ListItemSecondaryAction>\r\n          <IconButton\r\n            aria-label=\"Delete\"\r\n            onClick={() => {\r\n              deleteTodo(index);\r\n            }}\r\n          >\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n    ))}\r\n  </List>\r\n);\r\n\r\nexport default TodoList;","import axios from \"axios\";\r\n\r\nexport async function uploadData(params) {\r\n  var response = await axios.post('/api/capture', params);\r\n  return response.data;\r\n}\r\n\r\nexport async function fetchData(params) {\r\n  var response = await axios.post('/api/load', params);\r\n  return response.data;\r\n}\r\n\r\nexport async function uploadSymbol(params) {\r\n  var response = await axios.post('/api/save/symbols', params);\r\n  return response.data;\r\n}","import React, { useState, useEffect } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\n// Import React Table\nimport ReactTable from \"react-table\"\nimport \"react-table/react-table.css\"\n// Import React Datepicker\nimport DateFnsUtils from '@date-io/date-fns'\nimport { DateTimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers'\n// Import material-ui button\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { purple } from '@material-ui/core/colors';\n// Import TodoForm, TodoList\nimport TodoForm from './todo'\nimport TodoList from './todoList'\n// Import React Modal dialog\nimport Modal from 'react-modal'\n// Import React Spinner\nimport { css } from \"@emotion/core\";\nimport { FadeLoader } from \"react-spinners\";\n// Get Data, Capture Data\nimport { uploadData, fetchData, uploadSymbol } from \"./utils\"\n// Define Global variables for datepicker and input\nvar g_selected_date = {}\nvar g_increases = {}\n// Define modal dialog style\nconst customStyles = {\n  content : {\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)',\n    width                 : 400,\n    height                : 500,\n  }\n};\n// Can be a string as well. Need to ensure each key-value pair ends with ;\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n// Define Custom Button styles\nconst ColorButton = withStyles(theme => ({\n  root: {\n    color: theme.palette.getContrastText(purple[500]),\n    backgroundColor: purple[500],\n    '&:hover': {\n      backgroundColor: purple[700],\n    },\n  },\n}))(Button);\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\n// Make sure to bind modal to your appElement (http://reactcommunity.org/react-modal/accessibility/)\nModal.setAppElement('#root')\n\nfunction App() {\n  const classes = useStyles();\n  const [clickCount, setclickCount] = useState(0)\n  const [isModal, setisModal] = useState(false)\n  const [isTodo, setTodo] = useState(true)\n  const [loading, setLoading] = useState(false)\n  const [selected_date, setSelectedDate] = useState({})\n  const [increases, setIncrease] = useState({})\n  const [data, setData] = useState()\n  const [url, setUrl] = useState('')\n  const [symbols, setSymbols] = useState([])\n  const [multiSymbols, setMultiSymbols] = useState('');\n  const [columns, setColumns] = useState([\n    {\n      Header: 'Symbol',\n      accessor: 'symbol',\n      Cell: ({ row }) => <p>{row.symbol}</p>,\n      filterMethod: (filter, row) => {\n        return row[filter.id] && row[filter.id].startsWith(filter.value);\n      },\n      Filter: ({filter, onChange}) => (\n        <input type='text' placeholder=\"Symbol\" value={filter ? filter.value : ''} onChange={event => onChange(event.target.value)}/>\n      )\n    },\n    {\n      Header: 'date1',\n      accessor: 'time_o_1',\n      Cell: ({ row }) => <p>{row.time_o_1}</p>,\n      Filter: ({ filter, onChange}) => (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <DateTimePicker value={selected_date.time_o_1} onChange={event => onChangeDate(event, 'time_o_1')} />\n        </MuiPickersUtilsProvider>\n      )\n    },\n    {\n      Header: 'date2',\n      accessor: 'time_o_2',\n      Cell: ({ row }) => <p>{row.time_o_2}</p>,\n      Filter: ({ filter, onChange}) => (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <DateTimePicker value={selected_date.time_o_2} onChange={event => onChangeDate(event, 'time_o_2')} />\n        </MuiPickersUtilsProvider>\n      )\n    },\n    {\n      Header: 'increase1',\n      accessor: 'increase1',\n      Cell: ({ row }) => <p>{row.increase1 ? row.increase1 : 0 }%</p>,\n      getProps: (state, rowInfo, column) => {\n        return {\n          style: {\n            color: rowInfo && rowInfo.row.increase1 > 0 ? 'green' : 'red',\n          },\n        };\n      },\n      filterMethod: () => {},\n      Filter: () => (\n        <input type='text' placeholder=\"Increase 1-2\" value={increases.increase1} onChange={event => onChangeIncrease(event.target.value, 'increase1')} />\n      )\n    },\n  ])\n  \n  const onChangeDate = (e, type) => {\n    var temp = Object.assign({}, g_selected_date)\n    temp[type] = e;\n    setSelectedDate(temp)\n    g_selected_date = temp\n  };\n  \n  const onChangeIncrease = (value, type) => {\n    var temp = Object.assign({}, g_increases)\n    temp[type] = value;\n    setIncrease(temp)\n    g_increases = temp\n  };\n\n  const updateMyData = (rowIndex, columnId, value) => {\n    setData(old =>\n      old.map((row, index) => {\n        if (index === rowIndex) {\n          return {\n            ...old[rowIndex],\n            [columnId]: value,\n          }\n        }\n        return row\n      })\n    )\n  }\n\n  useEffect(() => {\n    if (clickCount !== 0) {\n      let date_num = clickCount + 2;\n      let increase_num = clickCount + 1;\n      const date_pick_name = 'time_o_' + date_num;\n      const header_name = 'date' + date_num; \n      const increase_name = 'increase' + increase_num;\n\n      var temp = [...columns];\n      temp.push(\n        {\n          Header: header_name,\n          accessor: date_pick_name,\n          Cell: ({ row }) => <p>{row[date_pick_name]}</p>,\n          Filter: ({ filter, onChange}) => (\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <DateTimePicker value={selected_date.date_pick_name} onChange={event => onChangeDate(event, date_pick_name)} />\n            </MuiPickersUtilsProvider>\n          )\n        },\n        {\n          Header: increase_name,\n          accessor: increase_name,\n          Cell: ({ row }) => <p>{row[increase_name] ? row[increase_name] : 0}%</p>,\n          getProps: (state, rowInfo, column) => {\n            return {\n                style: {\n                    color: rowInfo && rowInfo.row[increase_name] > 0 ? 'green' : 'red',\n                },\n            };\n          },\n          filterMethod: () => {},\n          Filter: () => (\n            <input type='text' placeholder=\"Increase 1-2\" value={increases.increase_name} onChange={event => onChangeIncrease(event.target.value, increase_name)} />\n          )\n        }\n      )\n      setColumns(temp);\n    }\n  }, [clickCount])\n  \n  const addColumn = () => {\n    setclickCount(clickCount + 1)\n  }\n\n  const loadSymbols = () => {\n    setisModal(true)\n  }\n\n  const multipleUpload = () => {\n    setTodo(!isTodo)\n  }\n\n  const handleSymbolChange = (e) => {\n    setMultiSymbols(e.target.value);\n  }\n\n  const chunkArray = (myArray, chunk_size) => {\n    var index = 0;\n    var arrayLength = myArray.length;\n    var tempArray = [];\n    \n    for (index = 0; index < arrayLength; index += chunk_size) {\n        let myChunk = myArray.slice(index, index+chunk_size);\n        tempArray.push(myChunk);\n    }\n\n    return tempArray;\n  }\n\n  const captureData = async () => {\n    const multiline_items = multiSymbols.split(\"\\n\");\n      \n    try {\n      let group = [];\n      if (isTodo) { \n        group = chunkArray(symbols, 100);\n      } else {\n        group = chunkArray(multiline_items, 100);\n      }\n      \n      var index = 0;\n      for (index in group) {\n        setLoading(true);\n        let promises = group[index].map(endpoint => {\n          return uploadData({ endpoint: endpoint + \"/\" + url });\n        });\n        const results = await Promise.all(promises);\n        console.log(results)\n      }\n      setLoading(false);\n\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  const clearURL = () => {\n    setUrl('');\n  }\n\n  const loadData = () => {\n    const multiline_items = multiSymbols.split(\"\\n\");\n    const params = {\n      symbols: isTodo ? symbols : multiline_items,\n      increments: increases,\n      dates: selected_date\n    };\n    setLoading(true);\n    fetchData(params).then(response => {\n      if (response.success) {\n        setData(response.data)\n        setLoading(false);\n      } else {\n        console.error(response.data)\n      }\n    }).catch(console.error);\n  }\n\n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter') {\n      uploadData(url)\n      .then(response => {\n        if (response.success) {\n          console.log('successfully captured');\n        }\n      })\n      .catch(console.error);\n    }\n  }\n  \n  const closeModal = (e) => {\n    setisModal(false);\n  }\n\n  const submitSymbols = (e) => {\n    const multiline_items = multiSymbols.split(\"\\n\");\n    const params = {\n      data: multiline_items\n    };\n    uploadSymbol(params).then(response => {\n      if (response.success) {\n        console.log('successfully uploaded');\n      }\n      setisModal(false);\n    }).catch(console.error);\n  };\n\n  return (\n    <div className=\"App\">\n      <Modal isOpen={isModal} onRequestClose={closeModal} style={customStyles}>\n        <div className=\"modal-header\">\n          <IconButton aria-label=\"delete\" onClick={(e) => closeModal(e)}>\n            <HighlightOffIcon />\n          </IconButton>\n        </div>\n        <div className=\"modal-body\">\n          {isTodo ? (<div>\n            <TodoForm\n              saveTodo={(todoText) => {\n                const trimmedText = todoText.trim();\n                if (trimmedText.length > 0) {\n                  setSymbols([...symbols, trimmedText]);\n                }\n              }}\n            />\n            <TodoList todos={symbols} /> </div>) : \n            (\n              <TextField label=\"Symobols Multiple Uploading\" multiline={true} variant=\"outlined\" value={multiSymbols} onChange={handleSymbolChange}/>\n            )}\n        </div>\n        <div className=\"modal-footer\">\n          <ColorButton variant=\"contained\" color=\"secondary\" className={classes.button} onClick={(e) => multipleUpload(e)}>{isTodo ? 'Multiple Upload': 'Single Upload' }</ColorButton>\n          <ColorButton variant=\"contained\" color=\"primary\" className={classes.button} onClick={(e) => isTodo ? closeModal(e) : submitSymbols(e)}>Submit</ColorButton>\n        </div>\n      </Modal>\n      {loading ? (<div className=\"sweet-loading\">\n        <FadeLoader css={override} size={150} color={\"#8A2BE2\"} loading={loading} />\n        <p>Loading...</p>\n      </div>) : null }\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p className=\"App-header-text\">React Table Customization</p>\n      </header>\n      <div className=\"App-body\">\n        <div className=\"App-btn-group\">\n          <div className=\"App-btns\">\n            <Button variant=\"contained\" color=\"secondary\" className={classes.button} startIcon={<CloudUploadIcon />} onClick={(e) => captureData(e)}>Capture</Button>\n            <Button variant=\"outlined\" className={classes.button} onClick={(e) => clearURL(e)}> Clear</Button>\n            <Button variant=\"contained\" color=\"primary\" className={classes.button} onClick={(e) => loadData(e)}> Load</Button>\n          </div>\n          <div className=\"App-btn\">\n            <ColorButton variant=\"contained\" color=\"primary\" className={classes.button} onClick={(e) => loadSymbols(e)}>Load Symbols</ColorButton>\n          </div>\n        </div>\n        <div className=\"App-input-group\">\n          <input type=\"text\" className=\"App-input\" value={url} onChange={(e) => setUrl(e.target.value)} onKeyDown={handleKeyDown}/>\n          <div className=\"App-btn\">\n            <button onClick={addColumn}> Add Column </button>\n          </div>\n        </div>\n        <ReactTable \n          data={data}\n          filterable\n          defaultFilterMethod={(filter, row) =>\n            String(row[filter.id]) === filter.value}\n          columns={columns}\n          setData={setData}\n          updateMyData={updateMyData} \n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}